#!/bin/bash
# File: d:\Folder_of_Dung\Project\Practice_Go\deploy\k8s\deploy.sh

set -e

echo "üöÄ ====================================="
echo "   Practice Go Kubernetes Deployment"
echo "====================================="

# Check prerequisites
echo "üîç Checking prerequisites..."

if ! command -v kubectl &> /dev/null; then
    echo "‚ùå kubectl not found"
    echo "üí° Install: https://kubernetes.io/docs/tasks/tools/install-kubectl/"
    exit 1
fi

if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker not found"
    echo "üí° Install Docker"
    exit 1
fi

if ! kubectl cluster-info &> /dev/null; then
    echo "‚ùå Cannot connect to Kubernetes cluster"
    echo "üí° Start cluster: minikube start"
    exit 1
fi

echo "‚úÖ Prerequisites check passed"

# Load environment
if [[ ! -f ".env" ]]; then
    echo "‚ùå .env file not found"
    exit 1
fi

export $(grep -v '^#' .env | xargs)

echo "üìã Environment:"
echo "  ‚Ä¢ Image: $IMAGE"
echo "  ‚Ä¢ Namespace: $NAMESPACE"
echo "  ‚Ä¢ Deploy Env: $DEPLOY_ENV"

# Build Docker image
echo ""
echo "üê≥ Building Docker image..."
cd ../..
if ! docker build -t "$IMAGE" .; then
    echo "‚ùå Docker build failed"
    exit 1
fi
echo "‚úÖ Docker build successful"

# Load image to minikube if needed
if minikube status &> /dev/null; then
    echo "üì¶ Loading image to minikube..."
    minikube image load "$IMAGE"
fi

cd service/k8s

# Process templates
echo ""
echo "üîÑ Processing templates..."
if ! ./apply_envsubst.sh; then
    echo "‚ùå Template processing failed"
    exit 1
fi

# Validate manifests
echo "üîç Validating manifests..."
if ! kubectl apply --dry-run=client -k . &> /dev/null; then
    echo "‚ùå Invalid manifests"
    exit 1
fi

# Apply manifests
echo ""
echo "‚ò∏Ô∏è Applying Kubernetes manifests..."
if ! kubectl apply -k .; then
    echo "‚ùå Deployment failed"
    exit 1
fi

# Wait for deployment
echo ""
echo "‚è≥ Waiting for deployment to be ready..."
if ! kubectl wait --for=condition=available --timeout=300s deployment/"$APP_NAME" -n "$NAMESPACE"; then
    echo "‚ùå Deployment timeout"
    echo "üîç Debug info:"
    kubectl get pods -n "$NAMESPACE"
    kubectl describe deployment "$APP_NAME" -n "$NAMESPACE"
    exit 1
fi

echo ""
echo "‚úÖ ====================================="
echo "   Deployment Completed Successfully!"
echo "====================================="

echo ""
echo "üìä Status:"
kubectl get all -n "$NAMESPACE"

echo ""
echo "üîó Access your application:"
echo "  ‚Ä¢ Port forward: ./debug.sh"
echo "  ‚Ä¢ Health check: curl http://localhost:8080/healthz"
echo ""
echo "üêõ Debug commands:"
echo "  ‚Ä¢ Logs: kubectl logs -f deployment/$APP_NAME -n $NAMESPACE"
echo "  ‚Ä¢ Pods: kubectl get pods -n $NAMESPACE"
echo "  ‚Ä¢ Events: kubectl get events -n $NAMESPACE --sort-by='.lastTimestamp'"